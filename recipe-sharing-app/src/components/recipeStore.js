import create from 'zustand';

const useRecipeStore = create(set => ({
  recipes: [], // List of all recipes
  favorites: [], // List of favorite recipe IDs
  recommendations: [], // Personalized recommendations for the user

  // Add a recipe to the user's favorites
  addFavorite: (recipeId) => set(state => {
    if (!state.favorites.includes(recipeId)) {
      return { favorites: [...state.favorites, recipeId] };
    }
    return state;
  }),

  // Remove a recipe from the user's favorites
  removeFavorite: (recipeId) => set(state => ({
    favorites: state.favorites.filter(id => id !== recipeId),
  })),

  // Generate personalized recommendations based on the user's favorites
  generateRecommendations: () => set(state => {
    // For simplicity, recommendations are generated by checking if the recipe is in the favorites list
    const recommended = state.recipes.filter(recipe =>
      state.favorites.includes(recipe.id) && Math.random() > 0.5
    );
    return { recommendations: recommended };
  }),

  // Add new recipes to the store
  addRecipe: (newRecipe) => set(state => ({ recipes: [...state.recipes, newRecipe] })),
  setRecipes: (recipes) => set({ recipes }),
}));

export { useRecipeStore };
